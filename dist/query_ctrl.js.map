{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","_","angular","StatseekerQueryCtrl","$scope","$injector","uiSegmentSrv","scope","outputModes","text","value","sortDirections","fieldSelection","filterSelection","sortSelection","aggrSelection","groupSelection","objectList","objectLinks","groupList","descriptions","deviceFieldMap","selectedObject","target","object","loadObjectList","then","o","loadDescription","datasource","templateSrv","replace","loadGroupList","setTargetProperties","from","object_opts","groups","fields","filters","adv_filter","sortby","groupby","limit","offset","output","pivot_field","interval","endpoint","runRequest","url","i","rows","response","data","objects","length","push","name","id","variables","variable","res","err","message","config","success","status","errmsg","list","to","move","Promise","resolve","loadDataList","j","p","splice","obj","forOwn","get","val","key","dst","done","selectedObj","getObjectFields","startsWith","buildFieldList","transformToSegments","field","fld","formatFirstTemplate","fmtList","arr","split","sortBy","toLowerCase","buildFormatList","alias","v","unshift","f_alias","getFormatList","fieldHasFormats","row","fieldMap","keyBy","format","aggregation_format","hide","order","custom","index","removeFilter","removeSort","map","join","tmp","rawMode","attempt","JSON","parse","rawQuery","isError","toJson","fn","isArray","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport angular from 'angular';\n\nexport class StatseekerQueryCtrl extends QueryCtrl {\n\n   constructor($scope, $injector, uiSegmentSrv)  {\n      super($scope, $injector);\n\n      this.scope = $scope;\n      this.uiSegmentSrv = uiSegmentSrv;\n      this.outputModes = [\n         {text: 'Timeseries', value: 'timeseries'},\n         {text: 'Table', value: 'table'},\n         {text: 'Table as Timeseries', value: 'ts_table'}\n      ];\n      this.sortDirections = [\n         {text: 'Ascending', value: 'asc'},\n         {text: 'Descending', value: 'desc'}\n      ];\n\n      this.fieldSelection = '+';\n      this.filterSelection = '+';\n      this.sortSelection = '+';\n      this.aggrSelection = '+';\n      this.groupSelection = '+';\n      this.objectList = [];\n      this.objectLinks = {};\n      this.groupList = [];\n      this.descriptions = {};\n      this.deviceFieldMap = {};\n      this.selectedObject = this.target.object;\n      this.loadObjectList().then(o => {\n         this.objectList = o;\n      });\n      this.loadDescription('cdt_device');\n      if (this.selectedObject) {\n         this.loadDescription(this.datasource.templateSrv.replace(this.selectedObject));\n      }\n      this.loadGroupList();\n\n      /* Target properties */\n      this.setTargetProperties(this.target);\n   }\n\n   setTargetProperties(from) {\n      this.target.object      = from.object      || 'Select object';\n      this.target.object_opts = from.object_opts || null;\n      this.target.groups      = from.groups      || [];\n      this.target.fields      = from.fields      || [];\n      this.target.filters     = from.filters     || [];\n      this.target.adv_filter  = from.adv_filter  || null;\n      this.target.sortby      = from.sortby      || [];\n      this.target.groupby     = from.groupby     || [];\n      this.target.limit       = from.limit       || 10;\n      this.target.offset      = from.offset      || 0;\n      this.target.output      = from.output      || 'timeseries';\n      this.target.pivot_field = from.pivot_field || 'Select field';\n      this.target.interval    = from.interval    || null;\n   }\n\n   loadDataList(endpoint) {\n      return this.datasource.runRequest(this.datasource.url + '/' + endpoint + '/?fields=id,name&limit=0&links=none', 'GET').then(response => {\n         var i;\n         var output = [];\n         var rows = response.data.data.objects[0].data;\n\n         if (rows.length === 0) {\n            return output;\n         }\n\n         for (i = 0; i < rows.length; i++) {\n            output.push({text: rows[i].name, value: rows[i].name, id: rows[i].id});\n         }\n\n         /* Add the template variables */\n         for (const variable of this.datasource.templateSrv.variables) {\n            output.push({text: '$' + variable.name, value: '$' + variable.name});\n         }\n\n         return output;\n      },\n      err => {\n         var res;\n\n         if ( ! err.data.data) {\n            throw {message: 'Request failed', data: err.data, config: err.config};\n         }\n         res = err.data.data;\n         if ( ! res.success) {\n            if (res.objects && res.objects.length === 1) {\n               throw {message: res.objects[0].status.errmsg, data: err.data, config: err.config};\n            }\n            else {\n               throw {message: res.errmsg, data: err.data, config: err.config};\n            }\n         }\n      });\n   }\n\n   moveRow(list, from, to) {\n      _.move(list, from, to);\n   }\n\n   loadObjectList() {\n      if (this.objectList.length > 0) {\n         return Promise.resolve(this.objectList);\n      }\n\n      return this.loadDataList('object');\n   }\n\n   loadGroupList() {\n      var i, j, p;\n\n      if (this.groupList.length > 0) {\n         return Promise.resolve(this.groupList);\n      }\n\n      p = this.loadDataList('group');\n      p.then(list => {\n         this.groupList = list;\n\n         /* Update any names in the target groups (and remove any non-existant ones) */\n         for (i = this.target.groups.length - 1; i >= 0; i--) {\n            if ( ! this.target.groups[i].id) {\n               continue;\n            }\n            this.target.groups[i].name = null;\n            for (j = 0; j < list.length; j++) {\n               if (list[j].id === this.target.groups[i].id) {\n                  this.target.groups[i].name = list[j].value;\n                  break;\n               }\n            }\n            if (this.target.groups[i].name === null) {\n               this.target.groups.splice(i, 1);\n            }\n         }\n      });\n\n      return p;\n   }\n\n   loadDescription(obj) {\n      if ( ! obj || obj === 'Select object') {\n         return Promise.resolve([]);\n      }\n\n      if (this.descriptions[obj]) {\n         return Promise.resolve(this.descriptions[obj]);\n      }\n\n      return this.datasource.runRequest(this.datasource.url + '/' + obj + '/describe?links=none', 'GET').then(response => {\n         this.descriptions[obj] = response.data.data.objects[0];\n\n         /* Get the descriptions of linked fields */\n         _.forOwn(_.get(response, 'data.data.objects[0].info.links', {}), (val, key) => {\n            this.loadDescription(val.dst);\n         });\n\n         return this.descriptions[obj];\n      },\n      err => {\n         var res;\n\n         if ( ! err.data.data) {\n            throw {message: 'Request failed', data: err.data, config: err.config};\n         }\n         res = err.data.data;\n         if ( ! res.success) {\n            if (res.objects && res.objects.length === 1) {\n               throw {message: res.objects[0].status.errmsg, data: err.data, config: err.config};\n            }\n            else {\n               throw {message: res.errmsg, data: err.data, config: err.config};\n            }\n         }\n      });\n   }\n\n   getObjectFields(output, done, obj) {\n      var selectedObj = this.datasource.templateSrv.replace(this.selectedObject);\n\n      if (done[obj]) {\n         return;\n      }\n\n      _.forOwn(_.get(this.descriptions, obj + '.fields', {}), (val, key) => {\n         if (obj === selectedObj) {\n            output.push({text: key, value: key});\n         }\n         else {\n            output.push({text: obj + '.' + key, value: obj + '.' + key});\n         }\n      });\n\n      done[obj] = true;\n\n      /* Get any linked object fields */\n      _.forOwn(_.get(this.descriptions, obj + '.info.links', {}), (val, key) => {\n         this.getObjectFields(output, done, val.dst);\n      });\n   }\n\n   buildFieldList() {\n      var output = [];\n      var done = {};\n      var obj = this.datasource.templateSrv.replace(this.selectedObject);\n\n      this.getObjectFields(output, done, this.datasource.templateSrv.replace(this.selectedObject));\n\n      /* Add the device fields at the end for cdt_ objects*/\n      if (obj.startsWith('cdt_') && obj !== 'cdt_ranges') {\n         this.getObjectFields(output, done, 'cdt_device');\n      }\n\n      /* Add the template variables */\n      for (const variable of this.datasource.templateSrv.variables) {\n         output.push({text: '$' + variable.name, value: '$' + variable.name});\n      }\n\n      return output;\n   }\n\n   getFieldList() {\n      return Promise.resolve(this.buildFieldList()).then(this.uiSegmentSrv.transformToSegments(false));\n   }\n\n   buildFormatList(field) {\n      var output = [];\n      var fld = this.datasource.templateSrv.replace(field, null, this.formatFirstTemplate);\n      var obj = this.datasource.templateSrv.replace(this.selectedObject);\n      var fmtList, arr;\n\n      arr = fld.split('.');\n      if (arr.length === 1) {\n         fmtList = _.get(this.descriptions, obj + '.fields.' + fld + '.options.formats.values', []);\n      }\n      else {\n         fmtList = _.get(this.descriptions, arr[0] + '.fields.' + arr[1] + '.options.formats.values', []);\n      }\n\n      if ( ! fmtList) {\n         return [];\n      }\n\n      _.forOwn(fmtList, (val, key) => {\n         output.push({text: key, value: key});\n      });\n\n      return _.sortBy(output, [val => {\n         return val.text.toLowerCase();\n      }]);\n   }\n\n   getFormatList(field) {\n      var output = this.buildFormatList(field);\n\n      /* Add the template variables */\n      for (const variable of this.datasource.templateSrv.variables) {\n         output.push({text: '$' + variable.name, value: '$' + variable.name});\n      }\n\n      return Promise.resolve(output).then(this.uiSegmentSrv.transformToSegments(false));\n   }\n\n   fieldHasFormats(field) {\n      return this.buildFormatList(field).length > 0;\n   }\n\n   getSelectedFields() {\n      var i, alias;\n      var output = [];\n\n      for (i = 0; i < this.target.fields.length; i++) {\n         alias = this.target.fields[i].alias ? this.target.fields[i].alias : this.target.fields[i].name;\n         output.push({text: alias, value: alias});\n      }\n\n      return Promise.resolve(_.sortBy(output, [val => {\n         return val.text.toLowerCase();\n      }])).then(this.uiSegmentSrv.transformToSegments(false));\n   }\n\n   getGroupbyOptions() {\n      var i, alias;\n      var output = [];\n\n      for (i = 0; i < this.target.fields.length; i++) {\n         alias = this.target.fields[i].alias ? this.target.fields[i].alias : this.target.fields[i].name;\n         output.push({text: alias, value: alias});\n      }\n\n      output = _.sortBy(output, [v => {\n         return v.text.toLowerCase();\n      }]);\n      output.unshift({text: '~All~', value: '~All~'});\n      output.push({text: '~Custom~', value: '~Custom~'});\n\n\n      return Promise.resolve(output).then(this.uiSegmentSrv.transformToSegments(false));\n   }\n\n   getAliasFormats(alias) {\n      var i, f_alias;\n\n      for (i = 0; i < this.target.fields.length; i++) {\n         f_alias = this.target.fields[i].alias ? this.target.fields[i].alias : this.target.fields[i].name;\n         if (f_alias === alias) {\n            return this.getFormatList(this.target.fields[i].name);\n         }\n      }\n\n      return [];\n   }\n\n   getAggregationFormatList() {\n      var output = [\n         {text: 'first',     value: 'first'},\n         {text: 'last',      value: 'last'},\n         {text: 'avg',       value: 'avg'},\n         {text: 'count',     value: 'count'},\n         {text: 'count_all', value: 'count_all'},\n         {text: 'cat',       value: 'cat'},\n         {text: 'list',      value: 'list'},\n         {text: 'min',       value: 'min'},\n         {text: 'max',       value: 'max'},\n         {text: 'sum',       value: 'sum'},\n         {text: 'total',     value: 'total'},\n         {text: 'median',    value: 'median'},\n         {text: '95th',      value: '95th'},\n         {text: 'stddev',    value: 'stddev'}\n      ];\n\n      return Promise.resolve(_.sortBy(output, [val => {\n         return val.text.toLowerCase();\n      }])).then(this.uiSegmentSrv.transformToSegments(false));\n   }\n\n   aliasHasFormats(alias) {\n      var i, f_alias;\n\n      for (i = 0; i < this.target.fields.length; i++) {\n         f_alias = this.target.fields[i].alias ? this.target.fields[i].alias : this.target.fields[i].name;\n         if (f_alias === alias) {\n            return this.fieldHasFormats(this.target.fields[i].name);\n         }\n      }\n\n      return false;\n   }\n\n   objectChanged() {\n      var obj = this.datasource.templateSrv.replace(this.target.object);\n\n      this.target.groups = [];\n      this.target.fields = [];\n      this.target.filters = [];\n      this.target.sortby = [];\n      this.target.groupby = [];\n      this.target.object_opts = null;\n      this.selectedObject = this.target.object;\n      this.loadDescription(obj);\n   }\n\n   addGroup() {\n      var i;\n\n      for (i = 0; i < this.groupList.length; i++) {\n         if (this.groupSelection === this.groupList[i].value) {\n            this.target.groups.push({id: this.groupList[i].id, name: this.groupList[i].value});\n         }\n      }\n      this.groupSelection = '+';\n   }\n\n   addField() {\n      var row;\n      var fieldMap = _.keyBy(this.buildFieldList(), 'text');\n\n      if ( ! (this.fieldSelection in fieldMap)) {\n         return;\n      }\n\n      row = {\n         name: this.fieldSelection,\n         format: 'Select format',\n         aggregation_format: 'Select aggregation type',\n         hide: false\n      };\n\n      this.target.fields.push(row);\n      this.fieldSelection = '+';\n   }\n\n   addFilter() {\n      var i, alias;\n\n      for (i = 0; i < this.target.fields.length; i++) {\n         alias = this.target.fields[i].alias ? this.target.fields[i].alias : this.target.fields[i].name;\n         if (this.filterSelection === alias) {\n            this.target.filters.push({field: this.filterSelection, format: 'Select format'});\n            break;\n         }\n      }\n      this.filterSelection = '+';\n   }\n\n   addSort() {\n      var i, alias;\n\n      for (i = 0; i < this.target.fields.length; i++) {\n         alias = this.target.fields[i].alias ? this.target.fields[i].alias : this.target.fields[i].name;\n         if (this.sortSelection === alias) {\n            this.target.sortby.push({field: this.sortSelection, format: 'Select format', order: 'asc'});\n            break;\n         }\n      }\n      this.sortSelection = '+';\n   }\n\n   addAggr() {\n      var i, alias;\n\n      if (this.aggrSelection === '~All~' || this.aggrSelection === '~Custom~') {\n         this.target.groupby.push({field: this.aggrSelection, format: 'Select format', custom: ''});\n      }\n      else {\n         for (i = 0; i < this.target.fields.length; i++) {\n            alias = this.target.fields[i].alias ? this.target.fields[i].alias : this.target.fields[i].name;\n            if (this.aggrSelection === alias) {\n               this.target.groupby.push({field: this.aggrSelection, format: 'Select format', custom: ''});\n               break;\n            }\n         }\n      }\n      this.aggrSelection = '+';\n   }\n\n   removeField(index) {\n      var i;\n      var alias = this.target.fields[index].alias ? this.target.fields[index].alias : this.target.fields[index].name;\n\n      /* Remove any dependent filters and sorting */\n      for (i = 0; i < this.target.filters.length; i++) {\n         if (this.target.filters[i].field === alias) {\n            this.removeFilter(i);\n         }\n      }\n      for (i = 0; i < this.target.sortby.length; i++) {\n         if (this.target.sortby[i].field === alias) {\n            this.removeSort(i);\n         }\n      }\n      this.target.fields.splice(index, 1);\n   }\n\n   getCollapsedText() {\n      return this.target.object + ' (' + _.map(this.target.fields, 'name').join(', ') + ') as ' + this.target.output;\n   }\n\n   toggleEditorMode() {\n      var tmp;\n\n      if (this.target.rawMode) {\n         /* Recreate the target */\n         tmp = _.attempt(JSON.parse, this.target.rawQuery);\n         if (_.isError(tmp)) {\n            throw {message: 'JSON decode failed'};\n         }\n         this.setTargetProperties(tmp);\n         this.target.rawMode = false;\n         this.target.rawQuery = null;\n      }\n      else {\n         /* Encode the raw query */\n         this.target.rawQuery = angular.toJson(this.target);\n         this.target.rawMode = true;\n      }\n   }\n\n   formatFirstTemplate(value, variable, fn) {\n      if (_.isArray(value)) {\n         return value[0];\n      }\n\n      return value;\n   }\n\n\n}\n\nStatseekerQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"]}