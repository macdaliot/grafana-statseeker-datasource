{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","_","angular","StatseekerQueryCtrl","$scope","$injector","uiSegmentSrv","scope","outputModes","text","value","sortDirections","fieldSelection","filterSelection","sortSelection","objectList","fieldMap","deviceFieldMap","selectedObject","target","object","loadObjectList","then","loadFieldMap","obj","forOwn","f_dev","val","key","datasource","templateSrv","replace","f","startsWith","merge","o","setTargetProperties","from","object_opts","fields","filters","adv_filter","sortby","limit","offset","output","length","Promise","resolve","runRequest","url","i","rows","response","data","objects","push","name","_index","res","err","message","config","success","status","errmsg","formats","get","v","fmt","sortBy","toLowerCase","transformToSegments","field","fld","formatFirstTemplate","cloneDeep","alias","f_alias","getFormatList","fieldHasFormats","row","format","hide","order","index","removeFilter","removeSort","splice","map","join","tmp","rawMode","attempt","JSON","parse","rawQuery","isError","toJson","variable","fn","isArray","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport angular from 'angular';\n\nexport class StatseekerQueryCtrl extends QueryCtrl {\n\n   constructor($scope, $injector, uiSegmentSrv)  {\n      super($scope, $injector);\n\n      this.scope = $scope;\n      this.uiSegmentSrv = uiSegmentSrv;\n      this.outputModes = [\n         {text: 'Timeseries', value: 'timeseries'},\n         {text: 'Table', value: 'table'}\n      ];\n      this.sortDirections = [\n         {text: 'Ascending', value: 'asc'},\n         {text: 'Descending', value: 'desc'}\n      ];\n\n      this.fieldSelection = '+';\n      this.filterSelection = '+';\n      this.sortSelection = '+';\n      this.objectList = [];\n      this.fieldMap = {};\n      this.deviceFieldMap = {};\n      this.selectedObject = this.target.object;\n      this.loadObjectList().then(o => {\n         this.loadFieldMap('cdt_device').then(f_dev => {\n            var obj;\n\n            /* Prepend 'Device' to all fields */\n            _.forOwn(f_dev, (val, key) => {\n               this.deviceFieldMap['cdt_device.' + key] = val;\n            });\n            if (this.selectedObject) {\n               obj = this.datasource.templateSrv.replace(this.selectedObject);\n\n               this.loadFieldMap(obj).then(f => {\n                  this.fieldMap = f;\n                  if (obj !== 'cdt_device' && obj !== 'cdt_ranges' && obj.startsWith('cdt_')) {\n                     _.merge(this.fieldMap, this.deviceFieldMap);\n                  }\n                  this.objectList = o;\n               });\n            }\n         });\n      });\n\n      /* Target properties */\n      this.setTargetProperties(this.target);\n   }\n\n   setTargetProperties(from) {\n      this.target.object      = from.object      || 'Select object';\n      this.target.object_opts = from.object_opts || null;\n      this.target.fields      = from.fields      || [];\n      this.target.filters     = from.filters     || [];\n      this.target.adv_filter  = from.adv_filter  || null;\n      this.target.sortby      = from.sortby      || [];\n      this.target.limit       = from.limit       || 10;\n      this.target.offset      = from.offset      || 0;\n      this.target.output      = from.output      || 'timeseries';\n   }\n\n   loadObjectList() {\n      if (this.objectList.length > 0) {\n         return Promise.resolve(this.objectList);\n      }\n\n      return this.datasource.runRequest(this.datasource.url + '/object/?fields=name&limit=0&links=none', 'GET').then(response => {\n         var i;\n         var output = [];\n         var rows = response.data.data.objects[0].data;\n\n         if (rows.length === 0) {\n            return output;\n         }\n\n         for (i = 0; i < rows.length; i++) {\n            output.push({text: rows[i].name, value: rows[i].name});\n         }\n\n         /* Add the template variables */\n         _.forOwn(this.datasource.templateSrv._index, (val, key) => {\n            output.push({text: '$' + key, value: '$' + key});\n         });\n\n         return output;\n      },\n      err => {\n         var res;\n\n         if ( ! err.data.data) {\n            throw {message: 'Request failed', data: err.data, config: err.config};\n         }\n         res = err.data.data;\n         if ( ! res.success) {\n            if (res.objects.length === 1) {\n               throw {message: res.objects[0].status.errmsg, data: err.data, config: err.config};\n            }\n            else {\n               throw {message: res.errmsg, data: err.data, config: err.config};\n            }\n         }\n      });\n   }\n\n   loadFieldMap(obj) {\n      if ( ! obj || obj === 'Select object') {\n         return Promise.resolve([]);\n      }\n\n      return this.datasource.runRequest(this.datasource.url + '/' + obj + '/describe?links=none', 'GET').then(response => {\n         var fieldMap, formats;\n\n         fieldMap = response.data.data.objects[0].fields;\n         _.forOwn(fieldMap, (val, key) => {\n            formats = [];\n            _.forOwn(_.get(val, 'options.formats.values', []), (v, fmt) => {\n               formats.push({text: fmt, value: fmt});\n            });\n            val.formats = _.sortBy(formats, [v => {\n               v.text.toLowerCase();\n            }]);\n         });\n\n         /* Add the template variables */\n         _.forOwn(this.datasource.templateSrv._index, (val, key) => {\n            fieldMap['$' + key] = {name: '$' + key};\n            fieldMap['$' + key].formats = [];\n         });\n\n         return fieldMap;\n      },\n      err => {\n         var res;\n\n         if ( ! err.data.data) {\n            throw {message: 'Request failed', data: err.data, config: err.config};\n         }\n         res = err.data.data;\n         if ( ! res.success) {\n            if (res.objects.length === 1) {\n               throw {message: res.objects[0].status.errmsg, data: err.data, config: err.config};\n            }\n            else {\n               throw {message: res.errmsg, data: err.data, config: err.config};\n            }\n         }\n      });\n   }\n\n   getFieldList() {\n      var output = [];\n\n      _.forOwn(this.fieldMap, (val, key) => {\n         output.push({text: key, value: key});\n      });\n\n      return Promise.resolve(_.sortBy(output, [val => {\n         val.text.toLowerCase();\n      }])).then(this.uiSegmentSrv.transformToSegments(false));\n   }\n\n   getFormatList(field) {\n      var output = [];\n      var fld = this.datasource.templateSrv.replace(field, null, this.formatFirstTemplate);\n\n      if (this.fieldMap[fld]) {\n         output = _.cloneDeep(this.fieldMap[fld].formats);\n         /* Add the template variables */\n         _.forOwn(this.datasource.templateSrv._index, (val, key) => {\n            output.push({text: '$' + key, value: '$' + key});\n         });\n      }\n\n      return Promise.resolve(_.sortBy(output, [val => {\n         val.text.toLowerCase();\n      }])).then(this.uiSegmentSrv.transformToSegments(false));\n   }\n\n   fieldHasFormats(field) {\n      var fld = this.datasource.templateSrv.replace(field, null, this.formatFirstTemplate);\n\n      return this.fieldMap[fld] && this.fieldMap[fld].formats.length > 0;\n   }\n\n   getSelectedFields() {\n      var i, alias;\n      var output = [];\n\n      for (i = 0; i < this.target.fields.length; i++) {\n         alias = this.target.fields[i].alias ? this.target.fields[i].alias : this.target.fields[i].name;\n         output.push({text: alias, value: alias});\n      }\n\n      return Promise.resolve(_.sortBy(output, [val => {\n         val.text.toLowerCase();\n      }])).then(this.uiSegmentSrv.transformToSegments(false));\n   }\n\n   getAliasFormats(alias) {\n      var i, f_alias;\n\n      for (i = 0; i < this.target.fields.length; i++) {\n         f_alias = this.target.fields[i].alias ? this.target.fields[i].alias : this.target.fields[i].name;\n         if (f_alias === alias && this.fieldMap[this.target.fields[i].name]) {\n            return this.getFormatList(this.target.fields[i].name);\n         }\n      }\n\n      return [];\n   }\n\n   aliasHasFormats(alias) {\n      var i, f_alias;\n\n      for (i = 0; i < this.target.fields.length; i++) {\n         f_alias = this.target.fields[i].alias ? this.target.fields[i].alias : this.target.fields[i].name;\n         if (f_alias === alias && this.fieldMap[this.target.fields[i].name]) {\n            return this.fieldHasFormats(this.target.fields[i].name);\n         }\n      }\n\n      return false;\n   }\n\n   objectChanged() {\n      var obj = this.datasource.templateSrv.replace(this.target.object);\n\n      this.target.fields = [];\n      this.target.filters = [];\n      this.target.sortby = [];\n      this.target.object_opts = null;\n      this.selectedObject = null;\n\n      this.loadFieldMap(obj).then(f => {\n         this.fieldMap = f;\n         if (obj !== 'cdt_device' && obj !== 'cdt_ranges' && obj.startsWith('cdt_')) {\n            _.merge(this.fieldMap, this.deviceFieldMap);\n         }\n         this.selectedObject = this.target.object;\n      });\n   }\n\n   addField() {\n      var row = {name: this.fieldSelection, format: 'Select format', hide: false};\n\n      this.target.fields.push(row);\n      this.fieldSelection = '+';\n   }\n\n   addFilter() {\n      var row = {field: this.filterSelection, format: 'Select format'};\n\n      this.target.filters.push(row);\n      this.filterSelection = '+';\n   }\n\n   addSort() {\n      var row = {field: this.sortSelection, format: 'Select format', order: 'asc'};\n\n      this.target.sortby.push(row);\n      this.sortSelection = '+';\n   }\n\n   removeField(index) {\n      var i;\n      var alias = this.target.fields[index].alias ? this.target.fields[index].alias : this.target.fields[index].name;\n\n      /* Remove any dependent filters and sorting */\n      for (i = 0; i < this.target.filters.length; i++) {\n         if (this.target.filters[i].field === alias) {\n            this.removeFilter(i);\n         }\n      }\n      for (i = 0; i < this.target.sortby.length; i++) {\n         if (this.target.sortby[i].field === alias) {\n            this.removeSort(i);\n         }\n      }\n      this.target.fields.splice(index, 1);\n   }\n\n   removeFilter(index) {\n      this.target.filters.splice(index, 1);\n   }\n\n   removeSort(index) {\n      this.target.sortby.splice(index, 1);\n   }\n\n   getCollapsedText() {\n      return this.target.object + ' (' + _.map(this.target.fields, 'field').join(', ') + ') as ' + this.target.output;\n   }\n\n   toggleEditorMode() {\n      var tmp;\n\n      if (this.target.rawMode) {\n         /* Recreate the target */\n         tmp = _.attempt(JSON.parse, this.target.rawQuery);\n         if (_.isError(tmp)) {\n            throw {message: 'JSON decode failed'};\n         }\n         this.setTargetProperties(tmp);\n         this.target.rawMode = false;\n         this.target.rawQuery = null;\n      }\n      else {\n         /* Encode the raw query */\n         this.target.rawQuery = angular.toJson(this.target);\n         this.target.rawMode = true;\n      }\n   }\n\n   formatFirstTemplate(value, variable, fn) {\n      if (_.isArray(value)) {\n         return value[0];\n      }\n\n      return value;\n   }\n\n\n}\n\nStatseekerQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"]}